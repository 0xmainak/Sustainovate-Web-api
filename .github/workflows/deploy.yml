# .github/workflows/deploy.yml

name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ] # Triggers the workflow on pushes to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner

    steps:
      # 1. Checkout the repository code
      - name: Checkout Code
        uses: actions/checkout@v4

      # 2. Set up Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Use Node.js version 20, same as in your Dockerfile
          cache: 'npm'

      # 3. Install dependencies
      - name: Install Dependencies
        run: npm install

      # 4. Run Linter
      - name: Run Linter
        run: npm run lint

      # 5. Run Tests
      - name: Run Tests
        run: npm run test
        env: # Set dummy env variables for the test environment if needed
          NODE_ENV: test
          JWT_SECRET: a-secret-for-testing

      # 6. Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 7. Build and push Docker image
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/my-backend-app:latest # Example: username/repo:tag

      # 8. Deploy to server via SSH
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          # key: ${{ secrets.SSH_KEY }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            # Navigate to your project directory on the server
            cd /home/jit/sustainovate/sustainovate-Web-Api
            
            # Pull the latest image from Docker Hub
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/my-backend-app:latest
            
            # Bring down the old containers and start the new ones
            docker-compose down
            docker-compose up -d